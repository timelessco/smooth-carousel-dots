"use strict";
/**
 * @since 15-08-19 16:13
 * @author vivaxy
 */
Object.defineProperty(exports, "__esModule", { value: true });
var chalk_1 = require("chalk");
var util = require("util");
var figures = require("figures");
var logSymbols = require("log-symbols");
exports.levels = {
    debug: 0,
    info: 1,
    success: 2,
    warn: 3,
    error: 4,
};
exports.level = 0;
/**
 * You can create your own logger with namespace and logLevel
 * @param _level
 * @param namespace
 */
function createLogger(_level, namespace) {
    return function log() {
        var messages = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            messages[_i] = arguments[_i];
        }
        if (_level >= exports.level) {
            var formatted = messages.map(function (message) {
                if (typeof message === 'object') {
                    return util.inspect(message, {
                        depth: null,
                    });
                }
                return message;
            });
            console.log.apply(console, [namespace].concat(formatted));
        }
    };
}
exports.createLogger = createLogger;
function setLevel(_level) {
    exports.level = _level;
}
exports.setLevel = setLevel;
// basic usage
exports.debug = createLogger(exports.levels.debug, chalk_1.default.grey(figures.pointerSmall));
exports.info = createLogger(exports.levels.info, logSymbols.info);
exports.success = createLogger(exports.levels.success, logSymbols.success);
exports.warn = createLogger(exports.levels.warn, logSymbols.warning);
exports.error = createLogger(exports.levels.error, logSymbols.error);
